# ConfigMap for Agent configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: k6-agent-config
  namespace: k6-system
data:
  config.yaml: |
    server:
      host: "0.0.0.0"
      port: 8080
    backend:
      url: "http://k6-backend-service:3001"
      timeout: 30s
      retry_count: 3
    k6:
      binary: "k6"
      max_concurrent_tasks: 10
      default_timeout: "30m"
    log:
      level: "info"
      format: "json"
    resources:
      max_memory: "1GB"
      max_cpu_percent: 80
      cleanup_interval: "1h"
    security:
      enable_auth: false
      allowed_origins:
        - "*"
    monitoring:
      enable_metrics: true
      metrics_port: 9090
      health_check_interval: "30s"

---
# Service for Agent
apiVersion: v1
kind: Service
metadata:
  name: k6-agent-service
  namespace: k6-system
  labels:
    app: k6-agent
spec:
  selector:
    app: k6-agent
  ports:
    - name: http
      port: 8080
      targetPort: 8080
      protocol: TCP
    - name: metrics
      port: 9090
      targetPort: 9090
      protocol: TCP
  type: ClusterIP

---
# Deployment for Agent
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k6-agent
  namespace: k6-system
  labels:
    app: k6-agent
spec:
  replicas: 3
  selector:
    matchLabels:
      app: k6-agent
  template:
    metadata:
      labels:
        app: k6-agent
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: k6-agent
        image: k6-agent:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 9090
          name: metrics
        env:
        - name: SERVER_HOST
          value: "0.0.0.0"
        - name: SERVER_PORT
          value: "8080"
        - name: BACKEND_URL
          value: "http://k6-backend-service:3001"
        - name: LOG_LEVEL
          value: "info"
        - name: K6_BINARY
          value: "k6"
        volumeMounts:
        - name: config
          mountPath: /app/config.yaml
          subPath: config.yaml
          readOnly: true
        - name: temp-storage
          mountPath: /app/temp
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
      volumes:
      - name: config
        configMap:
          name: k6-agent-config
      - name: temp-storage
        emptyDir:
          sizeLimit: 1Gi
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      securityContext:
        fsGroup: 1000

---
# HorizontalPodAutoscaler for Agent
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: k6-agent-hpa
  namespace: k6-system
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: k6-agent
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60

---
# ServiceMonitor for Prometheus (if using Prometheus Operator)
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: k6-agent-metrics
  namespace: k6-system
  labels:
    app: k6-agent
spec:
  selector:
    matchLabels:
      app: k6-agent
  endpoints:
  - port: metrics
    interval: 30s
    path: /metrics

---
# NetworkPolicy for Agent (optional)
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: k6-agent-netpol
  namespace: k6-system
spec:
  podSelector:
    matchLabels:
      app: k6-agent
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: k6-system
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 8080
    - protocol: TCP
      port: 9090
  egress:
  - to: []
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
  - to:
    - namespaceSelector:
        matchLabels:
          name: k6-system
    ports:
    - protocol: TCP
      port: 3001
  - to: []
    ports:
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 443